name: Main Branch CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      reason:
        description: 'Manual trigger reason'
        required: false
        default: 'Manual deployment'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.18.0'

      - name: Install frontend dependencies
        run: |
          cd web
          npm ci

      - name: Build frontend
        env:
          CI: ""
          VITE_REACT_APP_VERSION: ${{ github.sha }}
        run: |
          cd web
          DISABLE_ESLINT_PLUGIN='true' npm run build

      - name: Install backend dependencies
        run: |
          go mod download
          go mod verify

      - name: Build backend
        run: |
          go build -ldflags "-s -w -X 'one-api/common.Version=${{ github.sha }}'" -o one-api

      - name: Run backend tests
        run: |
          go test ./... -v

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Save version info
        run: |
          echo "main-$(date +'%Y%m%d')-$(git rev-parse --short HEAD)" > VERSION

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest
            type=raw,value=main-{{date 'YYYYMMDD'}}-{{sha}}
            type=sha,prefix={{branch}}-

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-notification:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [build-and-test, build-docker]
    if: always() && github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Deployment Success
        if: needs.build-docker.result == 'success'
        run: |
          echo "üöÄ Deployment successful!"
          echo "Docker image: ghcr.io/${{ github.repository }}:latest"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"

      - name: Deployment Failed
        if: needs.build-docker.result == 'failure'
        run: |
          echo "‚ùå Deployment failed!"
          echo "Please check the logs for details."
          exit 1
